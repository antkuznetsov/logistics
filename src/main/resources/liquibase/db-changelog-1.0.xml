<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd">
    <changeSet author="anton.kuznetsov (generated)" id="1526809616390-1">
        <createTable catalogName="logistics" schemaName="public" tableName="audit">
            <column autoIncrement="true" name="id" type="INT">
                <constraints primaryKey="true" primaryKeyName="audit_pkey"/>
            </column>
            <column name="contract_id" type="INT4">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>
    <changeSet author="anton.kuznetsov (generated)" id="1526809616390-2">
        <createTable catalogName="logistics" schemaName="public" tableName="location">
            <column autoIncrement="true" name="id" type="INT">
                <constraints primaryKey="true" primaryKeyName="pk_location"/>
            </column>
            <column name="city" type="VARCHAR(50)">
                <constraints nullable="false"/>
            </column>
            <column name="address" type="VARCHAR(50)">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>
    <changeSet author="anton.kuznetsov (generated)" id="1526809616390-3">
        <createTable catalogName="logistics" schemaName="public" tableName="organization">
            <column autoIncrement="true" name="id" type="INT">
                <constraints primaryKey="true" primaryKeyName="pk_organization"/>
            </column>
            <column name="name" type="VARCHAR(50)">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>
    <changeSet author="anton.kuznetsov (generated)" id="1526809616390-4">
        <createTable catalogName="logistics" schemaName="public" tableName="payment">
            <column autoIncrement="true" name="id" type="INT">
                <constraints primaryKey="true" primaryKeyName="pk_payment"/>
            </column>
            <column name="type" type="VARCHAR(50)">
                <constraints nullable="false"/>
            </column>
            <column name="date" type="VARCHAR(50)">
                <constraints nullable="false"/>
            </column>
            <column name="amount" type="INT4"/>
            <column name="contract_id" type="INT4">
                <constraints nullable="false"/>
            </column>
        </createTable>
        <sql>
            <![CDATA[ALTER TABLE payment ADD CONSTRAINT amount CHECK (amount <= 500);]]>
        </sql>
    </changeSet>
    <changeSet author="anton.kuznetsov (generated)" id="1526809616390-5">
        <createTable catalogName="logistics" schemaName="public" tableName="shipment">
            <column autoIncrement="true" name="id" type="INT">
                <constraints primaryKey="true" primaryKeyName="shipment_pkey"/>
            </column>
            <column name="s_date_expected" type="date"/>
            <column name="s_date_actual" type="date"/>
            <column name="location_id" type="INT4">
                <constraints nullable="false"/>
            </column>
            <column name="r_date_expected" type="date"/>
            <column name="r_date_actual" type="date"/>
            <column name="contract_id" type="INT4"/>
            <column name="next_shipment_id" type="INT4"/>
        </createTable>
    </changeSet>
    <changeSet author="anton.kuznetsov (generated)" id="1526809616390-6">
        <createTable catalogName="logistics" schemaName="public" tableName="product">
            <column autoIncrement="true" name="id" type="INT">
                <constraints primaryKey="true" primaryKeyName="pk_product"/>
            </column>
            <column name="name" type="VARCHAR(50)">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>
    <changeSet author="anton.kuznetsov (generated)" id="1526809616390-7">
        <createTable catalogName="logistics" schemaName="public" tableName="contract">
            <column autoIncrement="true" name="id" type="INT">
                <constraints primaryKey="true" primaryKeyName="pk_contract"/>
            </column>
            <column name="amount" type="INT4"/>
            <column name="details" type="VARCHAR(50)">
                <constraints nullable="false"/>
            </column>
            <column name="organization_id" type="INT4">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>
    <changeSet author="anton.kuznetsov (generated)" id="1526809616390-8">
        <createTable catalogName="logistics" schemaName="public" tableName="shipment__product">
            <column name="shipment_id" type="INT4">
                <constraints nullable="false"/>
            </column>
            <column name="product_id" type="INT4">
                <constraints nullable="false"/>
            </column>
            <column name="count" type="INT4">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>
    <changeSet author="anton.kuznetsov (generated)" id="1526818176077-9">
        <addForeignKeyConstraint baseColumnNames="contract_id" baseTableCatalogName="logistics" baseTableName="shipment" baseTableSchemaName="public" constraintName="contract_id" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableCatalogName="logistics" referencedTableName="contract" referencedTableSchemaName="public"/>
    </changeSet>

    <changeSet author="anton.kuznetsov (generated)" id="1526809616390-10">
        <addForeignKeyConstraint baseColumnNames="product_id" baseTableCatalogName="logistics" baseTableName="shipment__product" baseTableSchemaName="public" constraintName="product_id" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableCatalogName="logistics" referencedTableName="product" referencedTableSchemaName="public"/>
    </changeSet>
    <changeSet author="anton.kuznetsov (generated)" id="1526809616390-11">
        <addForeignKeyConstraint baseColumnNames="contract_id" baseTableCatalogName="logistics" baseTableName="audit" baseTableSchemaName="public" constraintName="contract_id" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION"
                                 referencedColumnNames="id" referencedTableCatalogName="logistics" referencedTableName="contract" referencedTableSchemaName="public"/>
    </changeSet>
    <changeSet author="anton.kuznetsov (generated)" id="1526809616390-12">
        <addForeignKeyConstraint baseColumnNames="organization_id" baseTableCatalogName="logistics" baseTableName="contract" baseTableSchemaName="public" constraintName="organization_id" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate=
                "NO ACTION" referencedColumnNames="id" referencedTableCatalogName="logistics" referencedTableName="organization" referencedTableSchemaName="public"/>
    </changeSet>
    <changeSet author="anton.kuznetsov (generated)" id="1526809616390-13">
        <addForeignKeyConstraint baseColumnNames="shipment_id" baseTableCatalogName="logistics" baseTableName="shipment__product" baseTableSchemaName="public" constraintName="shipment_id" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate
                ="NO ACTION" referencedColumnNames="id" referencedTableCatalogName="logistics" referencedTableName="shipment" referencedTableSchemaName="public"/>
    </changeSet>
    <changeSet author="anton.kuznetsov (generated)" id="1526809616390-14">
        <addForeignKeyConstraint baseColumnNames="location_id" baseTableCatalogName="logistics" baseTableName="shipment" baseTableSchemaName="public" constraintName="location_id" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableCatalogName="logistics" referencedTableName="location" referencedTableSchemaName="public"/>
    </changeSet>
    <changeSet author="anton.kuznetsov (generated)" id="1526809616390-15">
        <addForeignKeyConstraint baseColumnNames="contract_id" baseTableCatalogName="logistics" baseTableName="payment" baseTableSchemaName="public" constraintName="contract_id" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableCatalogName="logistics" referencedTableName="contract" referencedTableSchemaName="public"/>
    </changeSet>
    <changeSet author="anton.kuznetsov (generated)" id="1526809616390-16">
        <sql>
            <!--Таблица «Организация-заказчик»-->
            INSERT INTO public.organization (name) VALUES ('ООО Бестранк');
            INSERT INTO public.organization (name) VALUES ('ООО Ай-Теко');

            <!--Таблица «Товар»-->
            INSERT INTO public.product (name) VALUES ('iPhone');
            INSERT INTO public.product (name) VALUES ('Samsung');
            INSERT INTO public.product (name) VALUES ('Nokia');
            INSERT INTO public.product (name) VALUES ('Xiaomi');
            INSERT INTO public.product (name) VALUES ('Motorola');

            <!--Таблица «Место доставки»-->
            INSERT INTO public.location (city, address) VALUES ('Санкт-Петербург', 'Невский 151');
            INSERT INTO public.location (city, address) VALUES ('Иннополис', 'Спортивная 116');
            INSERT INTO public.location (city, address) VALUES ('Санкт-Петербург', 'Лиговский 54');

            <!--Таблица «Договор»-->
            INSERT INTO public.contract (amount, details, organization_id) VALUES (50000, 'Тест', 1);
            INSERT INTO public.contract (amount, details, organization_id) VALUES (10000, 'Тест 2', 2);
            INSERT INTO public.contract (amount, details, organization_id) VALUES (500, 'Тест 3', 1);

            <!--Таблица «Платеж по договору»-->
            INSERT INTO public.payment (type, date, amount, contract_id) VALUES ('', '', 250, 1);
            INSERT INTO public.payment (type, date, amount, contract_id) VALUES ('', '', 500, 3);
            INSERT INTO public.payment (type, date, amount, contract_id) VALUES ('', '', 100, 2);
            INSERT INTO public.payment (type, date, amount, contract_id) VALUES ('', '', 270, 1);
            INSERT INTO public.payment (type, date, amount, contract_id) VALUES ('', '', 230, 2);

            <!--Таблица «Доставка»-->
            INSERT INTO public.shipment (s_date_expected, s_date_actual, location_id, r_date_expected, r_date_actual, contract_id, next_shipment_id) VALUES (null, '2018-05-14', 1, null, '2018-05-17', 1, null);
            INSERT INTO public.shipment (s_date_expected, s_date_actual, location_id, r_date_expected, r_date_actual, contract_id, next_shipment_id) VALUES (null, '2018-04-25', 2, null, '2018-04-30', 1, null);
            INSERT INTO public.shipment (s_date_expected, s_date_actual, location_id, r_date_expected, r_date_actual, contract_id, next_shipment_id) VALUES (null, '2018-05-01', 1, null, '2018-05-03', 1, null);
            INSERT INTO public.shipment (s_date_expected, s_date_actual, location_id, r_date_expected, r_date_actual, contract_id, next_shipment_id) VALUES (null, '2018-05-01', 3, null, '2018-05-17', 2, null);
            INSERT INTO public.shipment (s_date_expected, s_date_actual, location_id, r_date_expected, r_date_actual, contract_id, next_shipment_id) VALUES (null, '2018-05-01', 2, null, '2018-05-02', 2, null);
            INSERT INTO public.shipment (s_date_expected, s_date_actual, location_id, r_date_expected, r_date_actual, contract_id, next_shipment_id) VALUES (null, null, 1, null, null, 1, null);

            <!--Таблица «Доставка-Товар»-->
            INSERT INTO public.shipment__product (shipment_id, product_id, count) VALUES (1, 1, 2);
            INSERT INTO public.shipment__product (shipment_id, product_id, count) VALUES (1, 2, 1);
            INSERT INTO public.shipment__product (shipment_id, product_id, count) VALUES (1, 3, 4);
            INSERT INTO public.shipment__product (shipment_id, product_id, count) VALUES (2, 1, 4);
            INSERT INTO public.shipment__product (shipment_id, product_id, count) VALUES (3, 1, 1);
        </sql>
    </changeSet>
    <changeSet author="anton.kuznetsov (generated)" id="1526809616390-17" runOnChange="true">
        <createProcedure>
            <![CDATA[
                CREATE OR REPLACE FUNCTION addToAudit() RETURNS TRIGGER AS $$
                DECLARE
                  id int;
                BEGIN
                  IF TG_OP = 'INSERT' THEN
                    IF NEW.amount > 10000 THEN
                      id = NEW.id;
                      INSERT INTO audit(contract_id) values (id);
                    END IF;
                    RETURN NEW;
                  END IF;
                END;
                $$ LANGUAGE plpgsql;

                CREATE TRIGGER t_contract AFTER INSERT ON contract FOR EACH ROW EXECUTE PROCEDURE addToAudit();
            ]]>
        </createProcedure>
    </changeSet>
    <changeSet author="anton.kuznetsov (generated)" id="1526809616390-18" runOnChange="true">
        <createProcedure>
            <!--
            ВНИМАНИЕ! Данный тригер не поддерживает разбивку нескольких единиц одного товара по разным доставкам. Т.е. если
            в заказе уже содержиться 9 товаров, то при добавлении еще одного товара в количестве 3 шт. они успешно привяжутся.
            Разбиение на 1 шт. в этот заказ и 2 шт. в новый не произойдет.
            -->
            <![CDATA[
                CREATE OR REPLACE FUNCTION checkProductCountInShipment() RETURNS TRIGGER AS $$
                DECLARE
                  ship_prod record;
                  ship record;
                BEGIN
                  IF TG_OP = 'INSERT' THEN
                    SELECT shipment_id, SUM(count) as count INTO ship_prod FROM shipment__product WHERE shipment_id = NEW.shipment_id GROUP BY shipment_id;
                    raise notice 'ID %', ship_prod.shipment_id;
                    raise notice 'количество %', ship_prod.count;
                    IF ship_prod.count > 10 THEN
                      raise notice 'Разбиваем доставку';
                      raise notice 'Проверяем поле next_shipment_id';
                      SELECT * INTO ship FROM shipment WHERE id = NEW.shipment_id;
                      raise notice 'next_shipment_id = %', ship.next_shipment_id;
                      IF ship.next_shipment_id IS NULL THEN
                        raise notice 'Копируем доставку';
                      ELSE
                        raise notice 'Привязываем товар к доставке из поля next_shipment_id';
                      END IF;
                    ELSE
                      raise notice 'Оставляем как есть';
                    END IF;
                  END IF;
                  RETURN NEW;
                END;
                $$ LANGUAGE plpgsql;

                CREATE TRIGGER product_counter AFTER INSERT ON shipment__product FOR EACH ROW EXECUTE PROCEDURE checkProductCountInShipment();
            ]]>
        </createProcedure>
    </changeSet>
</databaseChangeLog>